{"ast":null,"code":"var _jsxFileName = \"/Users/jacksonpruett/Desktop/repos/treasurehunt-JacksonPruett/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Square from \"./components/Square\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [board, setBoard] = useState([\"?\", \"?\", \"?\", \"?\", \"?\", \"?\", \"?\", \"?\", \"?\"]);\n  const [guess, setGuess] = useState(5);\n  const [gameOver, setGameOver] = useState(false);\n  const [alert, setAlert] = useState(null);\n  const [treasureLocation, setTreasureLocation] = useState(Math.floor(Math.random() * board.length));\n  const [BombLocation, setBombLocation] = useState(Math.floor(Math.random() * board.length));\n\n  const refresh = () => {\n    window.location.reload();\n  };\n\n  const handleSquareClick = clickedSquareIndex => {\n    // variable holding copy of current state\n    let updatedBoard = [...board]; // set condition for if treasure location is same as the clicked square's index show a treasure\n\n    if (clickedSquareIndex === treasureLocation) {\n      // then reassign state value at that index to treasure emoji\n      updatedBoard[clickedSquareIndex] = \"ðŸ’Ž\";\n      alert(\"Winner!\"); // setBoard(updatedBoard)\n    } else if (clickedSquareIndex === BombLocation) {\n      updatedBoard[clickedSquareIndex] = \"ðŸ’£\";\n      alert(\"Loser!\"); // return window.location.reload()\n      // setBoard[updatedBoard]\n    } else {\n      // use index from clickedSquareIndex to update the clicked square's value with emoji using bracket notation\n      updatedBoard[clickedSquareIndex] = \"ðŸ‘¾\";\n      setGuess(guess - 1); // update state with the new board\n      // setBoard(updatedBoard)\n    }\n\n    setBoard(updatedBoard);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Alien Invasion\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"outer-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board\",\n        children: board.map((value, index) => {\n          console.log(value, index);\n          return /*#__PURE__*/_jsxDEV(Square, {\n            value: value,\n            index: index,\n            handleSquareClick: handleSquareClick\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"restart\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: refresh,\n          children: \"Play again?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"guess-box\",\n        children: [\"Galactic Currency Remaining: \", guess]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(App, \"FkXIpy1vRPaxt6QlB6HZcmmzHbY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Square","App","board","setBoard","guess","setGuess","gameOver","setGameOver","alert","setAlert","treasureLocation","setTreasureLocation","Math","floor","random","length","BombLocation","setBombLocation","refresh","window","location","reload","handleSquareClick","clickedSquareIndex","updatedBoard","map","value","index","console","log"],"sources":["/Users/jacksonpruett/Desktop/repos/treasurehunt-JacksonPruett/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nimport Square from \"./components/Square\";\n\nimport \"./App.css\";\n\nconst App = () => {\n  const [board, setBoard] = useState([\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n  ]);\n\n  const [guess, setGuess] = useState(5);\n  const [gameOver, setGameOver] = useState(false)\n  const [alert, setAlert] = useState(null)\n  const [treasureLocation, setTreasureLocation] = useState(\n    Math.floor(Math.random() * board.length)\n  );\n  const [BombLocation, setBombLocation] = useState(\n    Math.floor(Math.random() * board.length)\n  );\n\n  const refresh = () => {\n    window.location.reload();\n  };\n  const handleSquareClick = (clickedSquareIndex) => {\n    // variable holding copy of current state\n    let updatedBoard = [...board];\n    // set condition for if treasure location is same as the clicked square's index show a treasure\n    if (clickedSquareIndex === treasureLocation) {\n      // then reassign state value at that index to treasure emoji\n      updatedBoard[clickedSquareIndex] = \"ðŸ’Ž\";\n      alert(\"Winner!\")\n      // setBoard(updatedBoard)\n    } else if (clickedSquareIndex === BombLocation) {\n      updatedBoard[clickedSquareIndex] = \"ðŸ’£\";\n      alert(\"Loser!\")\n      // return window.location.reload()\n      // setBoard[updatedBoard]\n    } else {\n      // use index from clickedSquareIndex to update the clicked square's value with emoji using bracket notation\n      updatedBoard[clickedSquareIndex] = \"ðŸ‘¾\";\n      setGuess(guess - 1);\n      // update state with the new board\n      // setBoard(updatedBoard)\n    }\n    setBoard(updatedBoard);\n  };\n\n  return (\n    <>\n      <h1>Alien Invasion</h1>\n      <div className=\"outer-box\">  \n        <div className=\"board\">\n        {/* Map over array and return a square for each element */}\n        {board.map((value, index) => {\n          console.log(value, index);\n          return (\n            <Square\n              value={value}\n              index={index}\n              handleSquareClick={handleSquareClick}\n            />\n          );\n        })}\n      </div>\n      <div className=\"restart\">\n        <button onClick={refresh}>Play again?</button>\n      </div>\n      <p className=\"guess-box\">Galactic Currency Remaining: {guess}</p>\n    </div>    \n    </>\n  );\n};\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,MAAP,MAAmB,qBAAnB;AAEA,OAAO,WAAP;;;;AAEA,MAAMC,GAAG,GAAG,MAAM;EAAA;;EAChB,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,CACjC,GADiC,EAEjC,GAFiC,EAGjC,GAHiC,EAIjC,GAJiC,EAKjC,GALiC,EAMjC,GANiC,EAOjC,GAPiC,EAQjC,GARiC,EASjC,GATiC,CAAD,CAAlC;EAYA,MAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,CAAD,CAAlC;EACA,MAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,KAAD,CAAxC;EACA,MAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,IAAD,CAAlC;EACA,MAAM,CAACW,gBAAD,EAAmBC,mBAAnB,IAA0CZ,QAAQ,CACtDa,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBZ,KAAK,CAACa,MAAjC,CADsD,CAAxD;EAGA,MAAM,CAACC,YAAD,EAAeC,eAAf,IAAkClB,QAAQ,CAC9Ca,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBZ,KAAK,CAACa,MAAjC,CAD8C,CAAhD;;EAIA,MAAMG,OAAO,GAAG,MAAM;IACpBC,MAAM,CAACC,QAAP,CAAgBC,MAAhB;EACD,CAFD;;EAGA,MAAMC,iBAAiB,GAAIC,kBAAD,IAAwB;IAChD;IACA,IAAIC,YAAY,GAAG,CAAC,GAAGtB,KAAJ,CAAnB,CAFgD,CAGhD;;IACA,IAAIqB,kBAAkB,KAAKb,gBAA3B,EAA6C;MAC3C;MACAc,YAAY,CAACD,kBAAD,CAAZ,GAAmC,IAAnC;MACAf,KAAK,CAAC,SAAD,CAAL,CAH2C,CAI3C;IACD,CALD,MAKO,IAAIe,kBAAkB,KAAKP,YAA3B,EAAyC;MAC9CQ,YAAY,CAACD,kBAAD,CAAZ,GAAmC,IAAnC;MACAf,KAAK,CAAC,QAAD,CAAL,CAF8C,CAG9C;MACA;IACD,CALM,MAKA;MACL;MACAgB,YAAY,CAACD,kBAAD,CAAZ,GAAmC,IAAnC;MACAlB,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR,CAHK,CAIL;MACA;IACD;;IACDD,QAAQ,CAACqB,YAAD,CAAR;EACD,CAtBD;;EAwBA,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAK,SAAS,EAAC,WAAf;MAAA,wBACE;QAAK,SAAS,EAAC,OAAf;QAAA,UAECtB,KAAK,CAACuB,GAAN,CAAU,CAACC,KAAD,EAAQC,KAAR,KAAkB;UAC3BC,OAAO,CAACC,GAAR,CAAYH,KAAZ,EAAmBC,KAAnB;UACA,oBACE,QAAC,MAAD;YACE,KAAK,EAAED,KADT;YAEE,KAAK,EAAEC,KAFT;YAGE,iBAAiB,EAAEL;UAHrB;YAAA;YAAA;YAAA;UAAA,QADF;QAOD,CATA;MAFD;QAAA;QAAA;QAAA;MAAA,QADF,eAcA;QAAK,SAAS,EAAC,SAAf;QAAA,uBACE;UAAQ,OAAO,EAAEJ,OAAjB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QAdA,eAiBA;QAAG,SAAS,EAAC,WAAb;QAAA,4CAAuDd,KAAvD;MAAA;QAAA;QAAA;QAAA;MAAA,QAjBA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA,gBADF;AAwBD,CA1ED;;GAAMH,G;;KAAAA,G;AA4EN,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}